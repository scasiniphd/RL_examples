[tool.poetry]
name = "gridworld-montecarlo-examples"
version = "0.1.0"
description = ""
authors = ["sCasini <simona.casini89@gmail.com>"]
readme = "README.md"
packages = [{include = "gridworld_montecarlo_examples", from = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
ruff = "^0.7.4"
pytest = "^8.3.3"
pre-commit = "^4.0.1"
numpy = "<2.1.0"
matplotlib = "^3.9.2"
seaborn = "^0.13.2"
pymunk = "5.7.0"
py-aiger-gridworld = "^0.4.3"
gym = "^0.26.2"
keras = "^3.7.0"
tensorflow = "^2.18.0"
scipy = "^1.14.1"


[tool.poetry.group.dev.dependencies]
ipykernel = "^6.29.5"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 99
exclude = ["jupyter_notebook_config.py"]
lint.select = [
    "E",  # pycodestyle errors (settings from FastAPI, thanks, @tiangolo!)
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
lint.ignore = [
    "E501",  # line too long, handled by black
    "C901",  # too complex
]

[tool.pytest.ini_options]
pythonpath = [
  "."
]
addopts = "-ra -q"
testpaths = [
    "tests",
]

[tool.ruff.lint.isort]
order-by-type = true
relative-imports-order = "closest-to-furthest"
extra-standard-library = ["typing"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
known-first-party = []


[tool.mypy]
exclude = ['\\.pyi$', 'docs', '.venv', 'notebooks']
ignore_missing_imports = true